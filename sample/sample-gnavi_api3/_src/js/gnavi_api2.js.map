{"version":3,"sources":["gnavi_api2.js"],"names":["api_key","hit_per_page_num","offset_page_num","pref_name_ini","pref_name_key","url_rest","url_pref","params","keyid","format","paramsShopData","jQuery","extend","pref","freeword","hit_per_page","offset_page","getTotalHitCount","data","total_hit_count","shopData","getJSON","gnavData","totalHitCount","console","log"],"mappings":";;AACA;AACA,IAAIA,UAAU,kCAAd,C,CAAkD;AAClD,IAAIC,mBAAmB,EAAvB,C,CAA2B;AAC3B,IAAIC,kBAAkB,CAAtB,C,CAAyB;AACzB,IAAIC,gBAAgB,EAApB,C,CAAwB;AACxB,IAAIC,gBAAgB,SAASD,aAA7B,C,CAA4C;;AAE5C;AACA,IAAIE,WAAW,2DAAf,C,CAA4E;AAC5E,IAAIC,WAAW,kEAAf,C,CAAmF;;AAEnF;AACA,IAAIC,SAAS;AACZC,QAAOR,OADK;AAEZS,SAAQ;AAFI,CAAb;;AAKA;AACA,IAAIC,iBAAiBC,OAAOC,MAAP,CAAc,EAAd,EAAmBL,MAAnB,CAArB;AACAG,eAAeG,IAAf,GAAsBT,aAAtB,C,CAAqC;AACrCM,eAAeI,QAAf,GAA0B,oBAA1B,C,CAAgD;AAChDJ,eAAeK,YAAf,GAA8Bd,gBAA9B;AACAS,eAAeM,WAAf,GAA6Bd,eAA7B,C,CAA8C;;;AAM9CS,OAAO,YAAW;AAClB;;;AAIC;AACA,KAAIM,mBAAmB,SAAnBA,gBAAmB,CAASC,IAAT,EAAc;AACnC,SAAOA,KAAKC,eAAZ;AACD,EAFD;;AAIA;AACA,KAAIC,WAAWT,OAAOU,OAAP,CAAehB,QAAf,EAAyBK,cAAzB,EAAyC,UAASQ,IAAT,EAAc;;AAErE,MAAII,WAAW,EAAf;AACAA,WAASC,aAAT,GAAyBN,iBAAiBC,IAAjB,CAAzB;AACAM,UAAQC,GAAR,CAAYH,SAASC,aAArB;AAEA,EANc,CAAf;;AAQD;;;;;;;;;;AAaA;AACC,CAjCD","file":"gnavi_api2.js","sourcesContent":["\n// API\nvar api_key = 'a6154b84e515ec01816a2abfe80fc329'; //アクセスキー\nvar hit_per_page_num = 10; //一度に表示する件数\nvar offset_page_num = 1; //初期ページ\nvar pref_name_ini = 13; //都道府県初期設定 (PREF13=東京都)\nvar pref_name_key = 'PREF' + pref_name_ini; //都道府県名キー作成\n\n// API URL\nvar url_rest = 'http://api.gnavi.co.jp/RestSearchAPI/20150630/?callback=?'; //レストラン検索API\nvar url_pref = 'http://api.gnavi.co.jp/master/PrefSearchAPI/20150630/?callback=?'; //エリアマスタ取得API\n\n//API 基本パラメータ\nvar params = {\n\tkeyid: api_key,\n\tformat: 'json'\n};\n\n// API 店舗データ取得用パラメータ設定\nvar paramsShopData = jQuery.extend({ }, params);\nparamsShopData.pref = pref_name_key; //都道府県設定\nparamsShopData.freeword = 'コーヒー,カフェ,珈琲,喫茶,喫茶店'; //キーワード設定\nparamsShopData.hit_per_page = hit_per_page_num;\nparamsShopData.offset_page = offset_page_num; //ページ数\n\n\n\n\n\njQuery(function() {\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\t//API　取得件数を表示\n\tvar getTotalHitCount = function(data){\n\t\t return data.total_hit_count;\n\t};\n\n\t//店舗データを取得し表示する\n\tvar shopData = jQuery.getJSON(url_rest, paramsShopData, function(data){\n\n\t\tvar gnavData = {};\n\t\tgnavData.totalHitCount = getTotalHitCount(data);\n\t\tconsole.log(gnavData.totalHitCount);\n\n\t});\n\n/*\n\n関数リテラル(変数shopData)で実行しているgetJsonメソッドの第三引数で実行させる関数は、\nAPIから各種データを取得するクラスメソッドと、そのデータを加工する\nクラスメソッドを実行させるclass構文に書き換える。\ngnavDataとparamsとpramsShopDataはクラス変数(コンストラクタ)にまとめて、\nインスタンス生成時にAPIエンドポイントのパラメーターを渡す仕様にする。\n\n*/\n\n\n\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------\n});"]}