{"version":3,"sources":["gnavi_api2.js"],"names":["getAPIdata","hit_per_page_num","pref_name_key","url_type","api_key","offset_page_num","endPoint","rest","pref","params","keyid","format","paramsShopData","jQuery","extend","freeword","hit_per_page","offset_page","api","apiUrl","_getUrl","apiParams","_getParameter","console","log"],"mappings":";;;;;;IAEMA,U;AAEL,qBAAYC,gBAAZ,EAA6BC,aAA7B,EAA2CC,QAA3C,EAAoD;AAAA;;AACnD,OAAKC,OAAL,GAAe,kCAAf,CADmD,CACA;AACnD,OAAKC,eAAL,GAAuB,CAAvB,CAFmD,CAEzB;AAC1B,OAAKJ,gBAAL,GAAwBA,gBAAxB,CAHmD,CAGT;AAC1C,OAAKC,aAAL,GAAqBA,aAArB,CAJmD,CAIhB;AACnC,OAAKC,QAAL,GAAgBA,QAAhB;AACA;;;;4BAEQ;;AAER,OAAIG,WAAW;AACdC,UAAO,2DADO,EACsD;AACpEC,UAAO,kEAFO,EAAf;;AAKA,WAAO,KAAKL,QAAZ;AACC,SAAK,MAAL;AACA,YAAOG,SAASE,IAAhB;AACA;AACA;AACA,YAAOF,SAASC,IAAhB;AACA;AAND;AAQA;;;kCAEc;;AAEd;AACA,OAAIE,SAAS;AACZC,WAAO,KAAKN,OADA;AAEZO,YAAQ;AAFI,IAAb;;AAKA;AACA,OAAIC,iBAAiBC,OAAOC,MAAP,CAAc,EAAd,EAAmBL,MAAnB,CAArB;AACAG,kBAAeJ,IAAf,GAAsB,KAAKN,aAA3B,CAVc,CAU4B;AAC1CU,kBAAeG,QAAf,GAA0B,oBAA1B,CAXc,CAWkC;AAChDH,kBAAeI,YAAf,GAA8B,KAAKf,gBAAnC;AACAW,kBAAeK,WAAf,GAA6B,KAAKZ,eAAlC,CAbc,CAaqC;;AAEnD,UAAOO,cAAP;AACA;;;;;;AASFC,OAAO,YAAW;AAClB;;AAEA,KAAIK,MAAY,IAAIlB,UAAJ,CAAe,EAAf,EAAkB,QAAlB,EAA2B,MAA3B,CAAhB;AACA,KAAImB,SAAYD,IAAIE,OAAJ,EAAhB;AACA,KAAIC,YAAYH,IAAII,aAAJ,EAAhB;AACAC,SAAQC,GAAR,CAAYL,MAAZ;AACAI,SAAQC,GAAR,CAAYH,SAAZ;;AAIA;;;;;;;;;;AAaA;AACC,CAzBD","file":"gnavi_api2.js","sourcesContent":["\n\t\nclass getAPIdata{\n\n\tconstructor(hit_per_page_num,pref_name_key,url_type){\n\t\tthis.api_key = 'a6154b84e515ec01816a2abfe80fc329'; //アクセスキー\n\t\tthis.offset_page_num = 1; //初期ページ\n\t\tthis.hit_per_page_num = hit_per_page_num; //一度に表示する件数\n\t\tthis.pref_name_key = pref_name_key;//都道府県(PREF13=東京都)\n\t\tthis.url_type = url_type;\n\t}\n\n\t_getUrl(){\n\n\t\tlet endPoint = {\n\t\t\trest : 'http://api.gnavi.co.jp/RestSearchAPI/20150630/?callback=?', //レストラン検索API\n\t\t\tpref : 'http://api.gnavi.co.jp/master/PrefSearchAPI/20150630/?callback=?', //エリアマスタ取得API\t\t\t\n\t\t}\n\n\t\tswitch(this.url_type){\n\t\t\tcase 'pref':\n\t\t\treturn endPoint.pref;\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\treturn endPoint.rest;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t_getParameter(){\n\n\t\t//API 基本パラメータ\n\t\tlet params = {\n\t\t\tkeyid: this.api_key,\n\t\t\tformat: 'json'\n\t\t};\n\n\t\t// API 店舗データ取得用パラメータ設定\n\t\tlet paramsShopData = jQuery.extend({ }, params);\n\t\tparamsShopData.pref = this.pref_name_key; //都道府県設定\n\t\tparamsShopData.freeword = 'コーヒー,カフェ,珈琲,喫茶,喫茶店'; //キーワード設定\n\t\tparamsShopData.hit_per_page = this.hit_per_page_num;\n\t\tparamsShopData.offset_page = this.offset_page_num; //ページ数\n\n\t\treturn paramsShopData;\n\t}\n\n}\n\n\n\n\n\n\njQuery(function() {\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nlet api       = new getAPIdata(10,'PREF13','rest');\nlet apiUrl    = api._getUrl();\nlet apiParams = api._getParameter();\nconsole.log(apiUrl);\nconsole.log(apiParams);\n\n\n\n/*\n\n関数リテラル(変数shopData)で実行しているgetJsonメソッドの第三引数で実行させる関数は、\nAPIから各種データを取得するクラスメソッドと、そのデータを加工する\nクラスメソッドを実行させるclass構文に書き換える。\ngnavDataとparamsとpramsShopDataはクラス変数(コンストラクタ)にまとめて、\nインスタンス生成時にAPIエンドポイントのパラメーターを渡す仕様にする。\n\n*/\n\n\n\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------\n});"]}